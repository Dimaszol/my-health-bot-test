# garmin_ui_handlers.py - –û–ß–ò–©–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø (—É–¥–∞–ª–µ–Ω—ã: –≤—Ä–µ–º—è –∞–Ω–∞–ª–∏–∑–∞, —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å, –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ)

import logging
import asyncio
from aiogram import types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from db_postgresql import get_user_language
from garmin_connector import garmin_connector
from subscription_manager import SubscriptionManager

logger = logging.getLogger(__name__)

# ================================
# –°–û–°–¢–û–Ø–ù–ò–Ø –î–õ–Ø FSM (—Ç–æ–ª—å–∫–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ)
# ================================

class GarminStates(StatesGroup):
    waiting_for_email = State()
    waiting_for_password = State()

# ================================
# –ö–õ–ê–í–ò–ê–¢–£–†–´
# ================================

async def garmin_main_keyboard(lang: str, user_id: int) -> InlineKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Garmin - –£–ü–†–û–©–ï–ù–ù–ê–Ø"""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–¥–∫–ª—é—á–µ–Ω –ª–∏ Garmin
    connection = await garmin_connector.get_garmin_connection(user_id)
    is_connected = connection is not None
    
    buttons = []
    
    if is_connected:
        # –ï—Å–ª–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
        buttons.extend([
            [InlineKeyboardButton(
                text="‚úÖ Garmin –ø–æ–¥–∫–ª—é—á–µ–Ω",
                callback_data="garmin_status"
            )],
            [InlineKeyboardButton(
                text="üß™ –¢–µ—Å—Ç–æ–≤—ã–π —Å–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö",
                callback_data="garmin_test_collection"
            )],
            [InlineKeyboardButton(
                text="‚ùå –û—Ç–∫–ª—é—á–∏—Ç—å Garmin",
                callback_data="garmin_disconnect"
            )]
        ])
    else:
        # –ï—Å–ª–∏ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        buttons.extend([
            [InlineKeyboardButton(
                text="üîó –ü–æ–¥–∫–ª—é—á–∏—Ç—å Garmin",
                callback_data="garmin_connect"
            )],
            [InlineKeyboardButton(
                text="‚ùì –ß—Ç–æ —ç—Ç–æ –¥–∞–µ—Ç?",
                callback_data="garmin_info"
            )]
        ])
    
    # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
    buttons.append([InlineKeyboardButton(
        text="‚Üê –ù–∞–∑–∞–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º",
        callback_data="back_to_settings"
    )])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)

# ================================
# –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò CALLBACK'–û–í
# ================================

async def handle_garmin_menu(callback: types.CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ Garmin"""
    user_id = callback.from_user.id
    lang = await get_user_language(user_id)
    
    try:
        keyboard = await garmin_main_keyboard(lang, user_id)
        
        text = """üì± <b>–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Garmin</b>

ü©∫ <b>–ß—Ç–æ —ç—Ç–æ –¥–∞–µ—Ç:</b>
- –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π AI –∞–Ω–∞–ª–∏–∑ –∑–¥–æ—Ä–æ–≤—å—è
- –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
- –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
- –°–≤—è–∑—å —Å–Ω–∞, –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏—è

‚ö†Ô∏è <b>–í–∞–∂–Ω–æ:</b> –ê–Ω–∞–ª–∏–∑ –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π (–ø–æ–¥–ø–∏—Å–∫–∞ –∏–ª–∏ –ø–æ–∫—É–ø–∫–∞ –ø–∞–∫–µ—Ç–∞)

üîÑ –ê–Ω–∞–ª–∏–∑ —Å–æ–∑–¥–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –ø–æ—è–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å–Ω–∞"""

        await callback.message.edit_text(text, reply_markup=keyboard, parse_mode="HTML")
        
    except Exception as e:
        if "message is not modified" in str(e):
            await callback.answer("‚úÖ Garmin –ø–æ–¥–∫–ª—é—á–µ–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        else:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ Garmin –º–µ–Ω—é: {e}")
            await callback.answer("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫")

async def handle_garmin_status(callback: types.CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è Garmin"""
    user_id = callback.from_user.id
    
    try:
        connection = await garmin_connector.get_garmin_connection(user_id)
        
        if connection:
            text = f"""‚úÖ <b>Garmin –ø–æ–¥–∫–ª—é—á–µ–Ω</b>

üìà <b>–°—Ç–∞—Ç—É—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:</b>
- –ü–æ—Å–ª–µ–¥–Ω—è—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è: {connection.get('last_sync_date', '–µ—â–µ –Ω–µ –±—ã–ª–æ')}
- –û—à–∏–±–æ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {connection.get('sync_errors', 0)}

üîã <b>–§—É–Ω–∫—Ü–∏–∏:</b>
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–∏ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å–Ω–∞
- –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏  
- –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ç—Ä–µ–Ω–¥–æ–≤"""
        else:
            text = "‚ùå <b>Garmin –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω</b>\n\n–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–æ–≤ –∑–¥–æ—Ä–æ–≤—å—è –ø–æ–¥–∫–ª—é—á–∏—Ç–µ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç Garmin Connect."
        
        await callback.answer(text, show_alert=True)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç—É—Å–∞ Garmin: {e}")
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞", show_alert=True)

async def handle_garmin_info(callback: types.CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö Garmin"""
    lang = await get_user_language(callback.from_user.id)
    
    text = """ü©∫ <b>–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∑–¥–æ—Ä–æ–≤—å—è —Å Garmin</b>

<b>üìä –ö–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –∞–Ω–∞–ª–∏–∑–∏—Ä—É—é—Ç—Å—è:</b>
‚Ä¢ üò¥ <b>–°–æ–Ω:</b> –∫–∞—á–µ—Å—Ç–≤–æ, —Ñ–∞–∑—ã, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
‚Ä¢ ‚ù§Ô∏è <b>–ü—É–ª—å—Å:</b> –ø–æ–∫–æ—è, –≤–∞—Ä–∏–∞–±–µ–ª—å–Ω–æ—Å—Ç—å, –Ω–∞–≥—Ä—É–∑–∫–∏  
‚Ä¢ üèÉ <b>–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:</b> —à–∞–≥–∏, –∫–∞–ª–æ—Ä–∏–∏, —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
‚Ä¢ üîã <b>Body Battery:</b> —ç–Ω–µ—Ä–≥–∏—è –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
‚Ä¢ üò∞ <b>–°—Ç—Ä–µ—Å—Å:</b> —É—Ä–æ–≤–µ–Ω—å –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è
‚Ä¢ ü´Å <b>–î—ã—Ö–∞–Ω–∏–µ –∏ SpO2:</b> –∫–∏—Å–ª–æ—Ä–æ–¥ –≤ –∫—Ä–æ–≤–∏

<b>ü§ñ –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç:</b>
‚Ä¢ –ö–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç –±–æ—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–Ω–∞
‚Ä¢ –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ —Å–Ω–∞ —Å–æ–∑–¥–∞–µ—Ç—Å—è –∞–Ω–∞–ª–∏–∑
‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —É—á–∏—Ç—ã–≤–∞—é—Ç –≤–∞—à—É –∞–Ω–∫–µ—Ç—É

<b>üí° –ü—Ä–∏–º–µ—Ä –∞–Ω–∞–ª–∏–∑–∞:</b>
"–°–æ–Ω 7—á 20–º–∏–Ω - –æ—Ç–ª–∏—á–Ω–æ! –ü—É–ª—å—Å –ø–æ–∫–æ—è —Å–Ω–∏–∑–∏–ª—Å—è –Ω–∞ 3 —É–¥–∞—Ä–∞ - –ø—Ä–∏–∑–Ω–∞–∫ —É–ª—É—á—à–µ–Ω–∏—è —Ñ–æ—Ä–º—ã. Body Battery 85% —É—Ç—Ä–æ–º –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ö–æ—Ä–æ—à–µ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –º–æ–∂–µ—Ç–µ —É–≤–µ–ª–∏—á–∏—Ç—å –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ —Å–µ–≥–æ–¥–Ω—è."

‚ö†Ô∏è <b>–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:</b>
‚Ä¢ –ß–∞—Å—ã Garmin —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –∑–¥–æ—Ä–æ–≤—å—è
‚Ä¢ –ê–∫–∫–∞—É–Ω—Ç Garmin Connect  
‚Ä¢ –ê–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –∏–ª–∏ –ø–∞–∫–µ—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π"""
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîó –ü–æ–¥–∫–ª—é—á–∏—Ç—å —Å–µ–π—á–∞—Å", callback_data="garmin_connect")],
        [InlineKeyboardButton(text="‚Üê –ù–∞–∑–∞–¥", callback_data="back_to_garmin")]
    ])
    
    await callback.message.edit_text(text, reply_markup=keyboard, parse_mode="HTML")
    await callback.answer()

async def handle_garmin_connect(callback: types.CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è Garmin"""
    user_id = callback.from_user.id
    lang = await get_user_language(user_id)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        limits = await SubscriptionManager.get_user_limits(user_id)
        has_consultations = limits.get('gpt4o_queries_left', 0) > 0
        
        if not has_consultations:
            text = """‚ö†Ô∏è <b>–ù—É–∂–Ω—ã –¥–µ—Ç–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏</b>

–î–ª—è —Ä–∞–±–æ—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ Garmin —Ç—Ä–µ–±—É—é—Ç—Å—è –¥–µ—Ç–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏.

üìä <b>–í–∞—à–∏ –ª–∏–º–∏—Ç—ã:</b>
‚Ä¢ –î–µ—Ç–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏: {gpt4o_queries_left}

üíé –û—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –∏–ª–∏ –∫—É–ø–∏—Ç–µ –ø–∞–∫–µ—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞ Garmin.""".format(**limits)
            
            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üíé –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="subscription")],
                [InlineKeyboardButton(text="‚Üê –ù–∞–∑–∞–¥", callback_data="back_to_garmin")]
            ])
            
            await callback.message.edit_text(text, reply_markup=keyboard, parse_mode="HTML")
            await callback.answer()
            return
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏–º–∏—Ç–æ–≤: {e}")
    
    # –ï—Å–ª–∏ –ª–∏–º–∏—Ç—ã –µ—Å—Ç—å - –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    text = """üîó <b>–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ Garmin Connect</b>

–í–≤–µ–¥–∏—Ç–µ email –æ—Ç –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ Garmin Connect:

üîê <b>–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:</b>
‚Ä¢ –î–∞–Ω–Ω—ã–µ —à–∏—Ñ—Ä—É—é—Ç—Å—è –ø–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –∑–¥–æ—Ä–æ–≤—å—è
‚Ä¢ –ú–æ–∂–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç—å –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç

‚ö†Ô∏è <b>–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –≤–µ—Ä–Ω—ã - –∏–Ω–∞—á–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç</b>"""

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="back_to_garmin")]
    ])
    
    await callback.message.edit_text(text, reply_markup=keyboard, parse_mode="HTML")
    await state.set_state(GarminStates.waiting_for_email)
    await callback.answer()

async def handle_garmin_disconnect(callback: types.CallbackQuery):
    """–û—Ç–∫–ª—é—á–∏—Ç—å Garmin"""
    user_id = callback.from_user.id
    lang = await get_user_language(user_id)
    
    text = """‚ùå <b>–û—Ç–∫–ª—é—á–µ–Ω–∏–µ Garmin</b>

–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–ª—é—á–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å Garmin?

‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∞–Ω–∞–ª–∏–∑—ã –∑–¥–æ—Ä–æ–≤—å—è –ø—Ä–µ–∫—Ä–∞—Ç—è—Ç—Å—è
‚Ä¢ –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Å—Ç–∞–Ω—É—Ç—Å—è –≤ –∏—Å—Ç–æ—Ä–∏–∏
‚Ä¢ –ú–æ–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –∑–∞–Ω–æ–≤–æ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è"""

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –î–∞, –æ—Ç–∫–ª—é—á–∏—Ç—å", callback_data="garmin_disconnect_confirm")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="back_to_garmin")]
    ])
    
    await callback.message.edit_text(text, reply_markup=keyboard, parse_mode="HTML")
    await callback.answer()

async def handle_garmin_disconnect_confirm(callback: types.CallbackQuery):
    """–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ Garmin"""
    user_id = callback.from_user.id
    lang = await get_user_language(user_id)
    
    try:
        success = await garmin_connector.disconnect_garmin(user_id)
        
        if success:
            text = "‚úÖ <b>Garmin –æ—Ç–∫–ª—é—á–µ–Ω</b>\n\n–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞. –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –µ—ë –∑–∞–Ω–æ–≤–æ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è."
        else:
            text = "‚ùå <b>–û—à–∏–±–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è</b>\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É."
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è Garmin: {e}")
        text = "‚ùå <b>–û—à–∏–±–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è</b>\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É."
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é Garmin
    keyboard = await garmin_main_keyboard(lang, user_id)
    await callback.message.edit_text(text, reply_markup=keyboard, parse_mode="HTML")
    await callback.answer()

async def handle_garmin_test_collection(callback: types.CallbackQuery):
    """–¢–µ—Å—Ç–æ–≤—ã–π —Å–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö Garmin"""
    user_id = callback.from_user.id
    
    try:
        await callback.answer("üîÑ –ó–∞–ø—É—Å–∫–∞—é —Ç–µ—Å—Ç–æ–≤—ã–π —Å–±–æ—Ä...")
        
        from garmin_scheduler import force_user_analysis
        
        await callback.message.edit_text(
            "üîÑ <b>–¢–µ—Å—Ç–æ–≤—ã–π —Å–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—É—â–µ–Ω</b>\n\n"
            "‚è≥ –°–æ–±–∏—Ä–∞—é –¥–∞–Ω–Ω—ã–µ Garmin...\n"
            "‚è≥ –ü—Ä–æ–≤–µ—Ä—è—é –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ —Å–Ω–∞...\n"
            "‚è≥ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞...",
            parse_mode="HTML"
        )
        
        success = await force_user_analysis(user_id)
        
        if success:
            text = """‚úÖ <b>–¢–µ—Å—Ç–æ–≤—ã–π —Å–±–æ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!</b>

üéØ <b>–ß—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ:</b>
‚Ä¢ –°–æ–±—Ä–∞–Ω—ã –¥–∞–Ω–Ω—ã–µ Garmin –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–Ω–∏
‚Ä¢ –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ —Å–Ω–∞
‚Ä¢ –°–æ–∑–¥–∞–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–Ω–∞–ª–∏–∑ –∑–¥–æ—Ä–æ–≤—å—è
‚Ä¢ –ù–æ–≤–æ–µ –≤—Ä–µ–º—è —Å–Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è

üí° <b>–†–µ–∑—É–ª—å—Ç–∞—Ç:</b> –ê–Ω–∞–ª–∏–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤–∞–º –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º"""
        else:
            text = """‚ÑπÔ∏è <b>–¢–µ—Å—Ç–æ–≤—ã–π —Å–±–æ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω</b>

üìä <b>–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –∞–Ω–∞–ª–∏–∑–∞:</b>
‚Ä¢ –í—Ä–µ–º—è —Å–Ω–∞ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
‚Ä¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –æ—Ç Garmin
‚Ä¢ –ó–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –¥–µ—Ç–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏

üí° <b>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ:</b>
‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ Garmin
‚Ä¢ –î–æ–∂–¥–∞—Ç—å—Å—è –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å–Ω–∞
‚Ä¢ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –ª–∏–º–∏—Ç—ã –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π"""
        
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å", callback_data="garmin_test_collection")],
            [InlineKeyboardButton(text="‚Üê –ù–∞–∑–∞–¥", callback_data="back_to_garmin")]
        ])
        
        await callback.message.edit_text(text, reply_markup=keyboard, parse_mode="HTML")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–±–æ—Ä–∞: {e}")
        
        error_text = """‚ùå <b>–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–±–æ—Ä–∞</b>

–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–µ –¥–∞–Ω–Ω—ã—Ö Garmin.

üí° <b>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ:</b>
‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ Garmin
‚Ä¢ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ
‚Ä¢ –û–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–∏ –æ—à–∏–±–∫–∏"""
        
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å", callback_data="garmin_test_collection")],
            [InlineKeyboardButton(text="‚Üê –ù–∞–∑–∞–¥", callback_data="back_to_garmin")]
        ])
        
        await callback.message.edit_text(error_text, reply_markup=keyboard, parse_mode="HTML")

async def handle_garmin_cancel_setup(callback: types.CallbackQuery, state: FSMContext):
    """–û—Ç–º–µ–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Garmin"""
    user_id = callback.from_user.id
    lang = await get_user_language(user_id)
    
    await state.clear()
    
    keyboard = await garmin_main_keyboard(lang, user_id)
    text = "‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞"
    
    await callback.message.edit_text(text, reply_markup=keyboard)
    await callback.answer()

# ================================
# –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò FSM –°–û–°–¢–û–Ø–ù–ò–ô
# ================================

async def handle_garmin_email_input(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ email"""
    user_id = message.from_user.id
    lang = await get_user_language(user_id)
    email = message.text.strip()
    
    # –ü—Ä–æ—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è email
    if '@' not in email or '.' not in email:
        await message.answer("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:")
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º email –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data(email=email)
    
    text = f"""üìß Email: <b>{email}</b>

–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –æ—Ç Garmin Connect:

üîê <b>–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:</b> –ø–∞—Ä–æ–ª—å –±—É–¥–µ—Ç –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω –ø–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º"""

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="garmin_cancel_setup")]
    ])
    
    await message.answer(text, reply_markup=keyboard, parse_mode="HTML")
    await state.set_state(GarminStates.waiting_for_password)

async def handle_garmin_password_input(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è"""
    user_id = message.from_user.id
    lang = await get_user_language(user_id)
    password = message.text.strip()
    
    # –ü–æ–ª—É—á–∞–µ–º email –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    email = data.get('email')
    
    if not email:
        await message.answer("‚ùå –û—à–∏–±–∫–∞: email –Ω–µ –Ω–∞–π–¥–µ–Ω. –ù–∞—á–Ω–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É –∑–∞–Ω–æ–≤–æ.")
        await state.clear()
        return
    
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–∞—Ä–æ–ª–µ–º –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    try:
        await message.delete()
    except:
        pass
    
    test_message = await message.answer("üîÑ –ü—Ä–æ–≤–µ—Ä—è—é –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Garmin...")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    success, result_message = await garmin_connector.test_garmin_connection(email, password)
    
    if success:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ (–ë–ï–ó –≤—Ä–µ–º–µ–Ω–∏ –∏ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞!)
        saved = await garmin_connector.save_garmin_connection(
            user_id=user_id,
            email=email, 
            password=password
        )
        
        if saved:
            text = f"""‚úÖ <b>Garmin –ø–æ–¥–∫–ª—é—á–µ–Ω —É—Å–ø–µ—à–Ω–æ!</b>

{result_message}

üîÑ –ê–Ω–∞–ª–∏–∑ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –ø–æ—è–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å–Ω–∞"""
            
            keyboard = await garmin_main_keyboard(lang, user_id)
        else:
            text = "‚ùå <b>–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è</b>\n\n–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏."
            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="‚Üê –ù–∞–∑–∞–¥", callback_data="back_to_garmin")]
            ])
    else:
        text = f"‚ùå <b>–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è</b>\n\n{result_message}"
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞", callback_data="garmin_connect")],
            [InlineKeyboardButton(text="‚Üê –ù–∞–∑–∞–¥", callback_data="back_to_garmin")]
        ])
    
    await test_message.edit_text(text, reply_markup=keyboard, parse_mode="HTML")
    await state.clear()

# ================================
# CALLBACK DATA HANDLERS MAP
# ================================

GARMIN_CALLBACK_HANDLERS = {
    'garmin_menu': handle_garmin_menu,
    'garmin_info': handle_garmin_info,
    'garmin_connect': handle_garmin_connect,
    'garmin_status': handle_garmin_status,
    'garmin_disconnect': handle_garmin_disconnect,
    'garmin_disconnect_confirm': handle_garmin_disconnect_confirm,
    'garmin_test_collection': handle_garmin_test_collection,
    'garmin_cancel_setup': handle_garmin_cancel_setup,
    'back_to_garmin': handle_garmin_menu,
}