def inspect_document_chunks(document_id: str, max_len: int = 400, show_all_metadata: bool = False):
    from chromadb import PersistentClient

    client = PersistentClient(path="vector_store")
    collection = client.get_or_create_collection(name="documents")
    results = collection.get(where={"document_id": document_id})

    if not results["ids"]:
        print(f"‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –≤–µ–∫—Ç–æ—Ä–Ω–æ–π –±–∞–∑–µ –ø–æ document_id = {document_id}")
        return

    print(f"\nüîé –î–æ–∫—É–º–µ–Ω—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç {len(results['ids'])} —á–∞–Ω–∫–æ–≤\n")

    for i in range(len(results["ids"])):
        doc_id = results["ids"][i]
        text = results["documents"][i].strip()
        metadata = results["metadatas"][i]
        keywords = metadata.get("keywords", "")
        keyword_list = [w.strip() for w in keywords.split(",") if w.strip()]
        is_incomplete = not text.endswith((".", "!", "?", "¬ª", "‚Äù", "‚Ä¶"))

        print(f"üîπ ID: {doc_id} {'‚ö†Ô∏è' if is_incomplete else ''}")
        print(f"üìè –î–ª–∏–Ω–∞: {len(text)} —Å–∏–º–≤–æ–ª–æ–≤")

        print("üìù TEXT:")
        if len(text) > max_len:
            print(text[:max_len] + "... [–æ–±—Ä–µ–∑–∞–Ω–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è]")
        else:
            print(text)

        print("üßæ METADATA:", metadata if show_all_metadata else {
            k: metadata[k] for k in ['date_inside', 'created_at', 'user_id', 'source'] if k in metadata
        })
        print("üîë KEYWORDS:", keyword_list)
        print("-" * 80)

inspect_document_chunks("105", max_len=500, show_all_metadata=True)
