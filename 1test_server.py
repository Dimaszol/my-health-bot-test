# test_server.py - –¢–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è Make.com

from aiohttp import web
import json
import asyncio
from datetime import datetime

async def handle_webhook(request):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ webhook –æ—Ç Make.com"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        data = await request.json()
        
        # –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        print(f"üéØ –ü–æ–ª—É—á–µ–Ω webhook –≤ {datetime.now()}:")
        print(f"üì® –î–∞–Ω–Ω—ã–µ: {json.dumps(data, indent=2, ensure_ascii=False)}")
        print(f"üåê IP –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è: {request.remote}")
        print("-" * 50)
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
        response_data = {
            "status": "success",
            "message": "Webhook –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ!",
            "received_at": datetime.now().isoformat(),
            "data_received": data
        }
        
        return web.json_response(response_data)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook: {e}")
        return web.json_response(
            {"status": "error", "message": str(e)}, 
            status=400
        )

async def handle_test(request):
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π endpoint"""
    return web.json_response({
        "status": "ok",
        "message": "–°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç!",
        "timestamp": datetime.now().isoformat(),
        "your_ip": request.remote
    })

async def handle_root(request):
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ"""
    html = """
    <html>
    <head><title>Webhook —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç!</title></head>
    <body>
        <h1>üéâ Webhook —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω!</h1>
        <p><strong>–°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ</strong></p>
        <p>–í—Ä–µ–º—è: {timestamp}</p>
        <p>–í–∞—à IP: {ip}</p>
        
        <h2>–î–æ—Å—Ç—É–ø–Ω—ã–µ endpoints:</h2>
        <ul>
            <li><code>GET /</code> - —ç—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞</li>
            <li><code>GET /test</code> - —Ç–µ—Å—Ç–æ–≤—ã–π JSON endpoint</li>
            <li><code>POST /webhook</code> - webhook –¥–ª—è Make.com</li>
        </ul>
        
        <h2>–¢–µ—Å—Ç POST –∑–∞–ø—Ä–æ—Å–∞:</h2>
        <button onclick="testWebhook()">–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π webhook</button>
        <div id="result"></div>
        
        <script>
        async function testWebhook() {{
            try {{
                const response = await fetch('/webhook', {{
                    method: 'POST',
                    headers: {{ 'Content-Type': 'application/json' }},
                    body: JSON.stringify({{
                        test: true,
                        message: '–¢–µ—Å—Ç–æ–≤—ã–π webhook',
                        timestamp: new Date().toISOString()
                    }})
                }});
                const result = await response.json();
                document.getElementById('result').innerHTML = 
                    '<pre>' + JSON.stringify(result, null, 2) + '</pre>';
            }} catch (e) {{
                document.getElementById('result').innerHTML = '–û—à–∏–±–∫–∞: ' + e.message;
            }}
        }}
        </script>
    </body>
    </html>
    """.format(
        timestamp=datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
        ip=request.remote
    )
    return web.Response(text=html, content_type='text/html')

def create_app():
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    app = web.Application()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä—à—Ä—É—Ç—ã
    app.router.add_get('/', handle_root)
    app.router.add_get('/test', handle_test)
    app.router.add_post('/webhook', handle_webhook)
    
    return app

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞"""
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞
    HOST = '0.0.0.0'  # –°–ª—É—à–∞–µ–º –Ω–∞ –≤—Å–µ—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞—Ö
    PORT = 8080
    
    print("üöÄ –ó–∞–ø—É—Å–∫ webhook —Å–µ—Ä–≤–µ—Ä–∞...")
    print(f"üåê –ê–¥—Ä–µ—Å: http://{HOST}:{PORT}")
    print(f"üè† –õ–æ–∫–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø: http://localhost:{PORT}")
    print(f"üåç –°–µ—Ç–µ–≤–æ–π –¥–æ—Å—Ç—É–ø: http://192.168.1.190:{PORT}")
    print("=" * 60)
    print("üì° –û–∂–∏–¥–∞–Ω–∏–µ webhook –æ—Ç Make.com...")
    print("üîç –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ: http://localhost:8080")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    app = create_app()
    
    try:
        runner = web.AppRunner(app)
        await runner.setup()
        
        site = web.TCPSite(runner, HOST, PORT)
        await site.start()
        
        # –î–µ—Ä–∂–∏–º —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–Ω—ã–º
        print("‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        print("‚èπÔ∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
        
        # –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª
        while True:
            await asyncio.sleep(1)
            
    except KeyboardInterrupt:
        print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...")
        await runner.cleanup()
        print("‚úÖ –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")