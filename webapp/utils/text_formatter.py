# webapp/utils/text_formatter.py
"""
üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
–ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç Markdown –≤ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π HTML –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ
"""

import re
import html


def format_for_web(text: str) -> str:
    """
    –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç Markdown —Ç–µ–∫—Å—Ç –≤ HTML –¥–ª—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    
    –ß—Ç–æ –¥–µ–ª–∞–µ—Ç:
    - **—Ç–µ–∫—Å—Ç** ‚Üí <strong>—Ç–µ–∫—Å—Ç</strong> (–∂–∏—Ä–Ω—ã–π)
    - *—Ç–µ–∫—Å—Ç* ‚Üí <em>—Ç–µ–∫—Å—Ç</em> (–∫—É—Ä—Å–∏–≤)
    - `–∫–æ–¥` ‚Üí <code>–∫–æ–¥</code> (–º–æ–Ω–æ—à–∏—Ä–∏–Ω–Ω—ã–π)
    - ### –ó–∞–≥–æ–ª–æ–≤–æ–∫ ‚Üí <h3>–ó–∞–≥–æ–ª–æ–≤–æ–∫</h3>
    - - –ø—É–Ω–∫—Ç ‚Üí <li>–ø—É–Ω–∫—Ç</li> (—Å–ø–∏—Å–∫–∏)
    - \n\n ‚Üí <br><br> (–ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫)
    
    Args:
        text: –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç –æ—Ç GPT –≤ Markdown —Ñ–æ—Ä–º–∞—Ç–µ
        
    Returns:
        –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π HTML —Ç–µ–∫—Å—Ç (–±–µ–∑–æ–ø–∞—Å–Ω—ã–π)
    """
    
    if not text:
        return ""
    
    
    
    # 2Ô∏è‚É£ –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º Markdown –ó–ê–ì–û–õ–û–í–ö–ò –≤ HTML
    # ### –ó–∞–≥–æ–ª–æ–≤–æ–∫ ‚Üí <h3>–ó–∞–≥–æ–ª–æ–≤–æ–∫</h3>
    text = re.sub(r'^### (.+)$', r'<h3 style="color: #00c9a7; font-weight: 600; margin-top: 1rem;">\1</h3>', text, flags=re.MULTILINE)
    text = re.sub(r'^## (.+)$', r'<h2 style="color: #00c9a7; font-weight: 600; margin-top: 1rem;">\1</h2>', text, flags=re.MULTILINE)
    text = re.sub(r'^# (.+)$', r'<h1 style="color: #00c9a7; font-weight: 700; margin-top: 1rem;">\1</h1>', text, flags=re.MULTILINE)
    
    # 3Ô∏è‚É£ –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –ñ–ò–†–ù–´–ô —Ç–µ–∫—Å—Ç
    # **—Ç–µ–∫—Å—Ç** ‚Üí <strong>—Ç–µ–∫—Å—Ç</strong>
    text = re.sub(r'\*\*(.+?)\*\*', r'<strong>\1</strong>', text)
    
    # 4Ô∏è‚É£ –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –ö–£–†–°–ò–í
    # *—Ç–µ–∫—Å—Ç* ‚Üí <em>—Ç–µ–∫—Å—Ç</em>
    # (–∏—Å–ø–æ–ª—å–∑—É–µ–º (?<!\*) —á—Ç–æ–±—ã –Ω–µ –∑–∞–¥–µ—Ç—å —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –∂–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç)
    text = re.sub(r'(?<!\*)\*(?!\*)(.+?)\*(?!\*)', r'<em>\1</em>', text)
    
    # 5Ô∏è‚É£ –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –ö–û–î
    # `–∫–æ–¥` ‚Üí <code>–∫–æ–¥</code>
    text = re.sub(
        r'`(.+?)`', 
        r'<code style="background: #f5f5f5; padding: 2px 6px; border-radius: 3px; font-family: monospace;">\1</code>', 
        text
    )
    
    # 6Ô∏è‚É£ –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –°–ü–ò–°–ö–ò
    # - –ø—É–Ω–∫—Ç ‚Üí <li>–ø—É–Ω–∫—Ç</li>
    # –°–Ω–∞—á–∞–ª–∞ –Ω–∞—Ö–æ–¥–∏–º –≤—Å–µ –ø—É–Ω–∫—Ç—ã —Å–ø–∏—Å–∫–∞
    lines = text.split('\n')
    formatted_lines = []
    in_list = False
    
    for line in lines:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ –ø—É–Ω–∫—Ç —Å–ø–∏—Å–∫–∞?
        if re.match(r'^[\-\*‚Ä¢]\s+(.+)', line):
            # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –ø—É–Ω–∫—Ç–∞ (–±–µ–∑ –º–∞—Ä–∫–µ—Ä–∞)
            item_text = re.sub(r'^[\-\*‚Ä¢]\s+', '', line)
            
            # –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π –ø—É–Ω–∫—Ç - –æ—Ç–∫—Ä—ã–≤–∞–µ–º <ul>
            if not in_list:
                formatted_lines.append('<ul style="margin-left: 1.5rem; margin-top: 0.5rem;">')
                in_list = True
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø—É–Ω–∫—Ç —Å–ø–∏—Å–∫–∞
            formatted_lines.append(f'<li style="margin-bottom: 0.3rem;">{item_text}</li>')
        else:
            # –ï—Å–ª–∏ –±—ã–ª–∞ –æ—Ç–∫—Ä—ã—Ç–∞ ul - –∑–∞–∫—Ä—ã–≤–∞–µ–º
            if in_list:
                formatted_lines.append('</ul>')
                in_list = False
            
            # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—ã—á–Ω—É—é —Å—Ç—Ä–æ–∫—É
            formatted_lines.append(line)
    
    # –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –Ω–µ –±—ã–ª –∑–∞–∫—Ä—ã—Ç - –∑–∞–∫—Ä—ã–≤–∞–µ–º
    if in_list:
        formatted_lines.append('</ul>')
    
    # –°–∫–ª–µ–∏–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
    text = '\n'.join(formatted_lines)
    
    # 7Ô∏è‚É£ –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –ü–ï–†–ï–ù–û–°–´ –°–¢–†–û–ö
    # –û–¥–∏–Ω –ø–µ—Ä–µ–Ω–æ—Å (\n) ‚Üí –ø—Ä–æ–±–µ–ª
    # –î–≤–∞ –ø–µ—Ä–µ–Ω–æ—Å–∞ (\n\n) ‚Üí <br><br>
    text = re.sub(r'\n\n+', '<br><br>', text)  # –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–Ω–æ—Å—ã
    text = re.sub(r'\n', ' ', text)  # –û–¥–∏–Ω–æ—á–Ω—ã–µ –ø–µ—Ä–µ–Ω–æ—Å—ã –≤ –ø—Ä–æ–±–µ–ª
    
    # 8Ô∏è‚É£ –£–ë–ò–†–ê–ï–ú –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
    text = re.sub(r'\s+', ' ', text)  # –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã –≤ –æ–¥–∏–Ω
    text = text.strip()
    
    return text


def format_error_message(error_text: str) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö –¥–ª—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    
    Args:
        error_text: –¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏
        
    Returns:
        HTML —Å –∫—Ä–∞—Å–Ω—ã–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º
    """
    return f'''
    <div style="
        background: #fee; 
        border-left: 4px solid #f44336; 
        padding: 1rem; 
        border-radius: 8px;
        color: #c62828;
    ">
        <strong>‚ö†Ô∏è –û—à–∏–±–∫–∞:</strong> {html.escape(error_text)}
    </div>
    '''


def format_success_message(message: str) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —É—Å–ø–µ—à–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    
    Args:
        message: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        
    Returns:
        HTML —Å –∑–µ–ª—ë–Ω—ã–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º
    """
    return f'''
    <div style="
        background: #e8f5e9; 
        border-left: 4px solid #4caf50; 
        padding: 1rem; 
        border-radius: 8px;
        color: #2e7d32;
    ">
        <strong>‚úÖ –£—Å–ø–µ—à–Ω–æ:</strong> {html.escape(message)}
    </div>
    '''


# üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï (–¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
if __name__ == "__main__":
    # –ü—Ä–∏–º–µ—Ä —Ç–µ–∫—Å—Ç–∞ –æ—Ç GPT
    test_text = """
    ## –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∑–¥–æ—Ä–æ–≤—å—é
    
    –í–æ—Ç —á—Ç–æ –≤–∞–∂–Ω–æ –∑–Ω–∞—Ç—å:
    
    - **–§–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å**: 150 –º–∏–Ω—É—Ç –≤ –Ω–µ–¥–µ–ª—é
    - **–ü–∏—Ç–∞–Ω–∏–µ**: 5-6 –ø–æ—Ä—Ü–∏–π –æ–≤–æ—â–µ–π –∏ —Ñ—Ä—É–∫—Ç–æ–≤
    - –†–µ–≥—É–ª—è—Ä–Ω—ã–µ `–∞–Ω–∞–ª–∏–∑—ã –∫—Ä–æ–≤–∏` –∫–∞–∂–¥—ã–µ 6 –º–µ—Å—è—Ü–µ–≤
    
    ### –í–∞–∂–Ω–æ!
    –ü—Ä–∏ –ø–æ—è–≤–ª–µ–Ω–∏–∏ —Å–∏–º–ø—Ç–æ–º–æ–≤ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –≤—Ä–∞—á—É.
    """
    
    print("=== –ò–°–•–û–î–ù–´–ô –¢–ï–ö–°–¢ ===")
    print(test_text)
    print("\n=== –ü–û–°–õ–ï –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–Ø ===")
    print(format_for_web(test_text))