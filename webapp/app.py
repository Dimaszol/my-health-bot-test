# webapp/app.py
# üåê –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –±–æ—Ç–∞

import os
import sys
import asyncio
from flask import Flask, render_template, session, redirect, url_for, request
from flask_session import Session

# üìÅ –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ –ø—É—Ç—å (—á—Ç–æ–±—ã –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å db_postgresql.py)
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

# üîß –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
from webapp.config import Config, validate_config

# üåç –ù–û–í–û–ï: –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏
from webapp.translations import t, get_current_language, set_language, get_supported_languages

# üóÑÔ∏è –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
from db_postgresql import initialize_db_pool, close_db_pool

"""
üéØ –ß–¢–û –î–ï–õ–ê–ï–¢ –≠–¢–û –ü–†–ò–õ–û–ñ–ï–ù–ò–ï:

1. –ó–∞–ø—É—Å–∫–∞–µ—Ç –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –Ω–∞ http://localhost:5000
2. –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –≤—Ö–æ–¥–∏—Ç—å —á–µ—Ä–µ–∑ Google
3. –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ PostgreSQL
4. –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —á–∞—Ç —Å –ò–ò (–∏—Å–ø–æ–ª—å–∑—É—è gpt.py)
5. –ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
6. üÜï –ü–û–î–î–ï–†–ñ–ö–ê 4 –Ø–ó–´–ö–û–í: —Ä—É—Å—Å–∫–∏–π, —É–∫—Ä–∞–∏–Ω—Å–∫–∏–π, –∞–Ω–≥–ª–∏–π—Å–∫–∏–π, –Ω–µ–º–µ—Ü–∫–∏–π

–í–°–ï –¥–∞–Ω–Ω—ã–µ –±–µ—Ä—É—Ç—Å—è –∏–∑ —Ç–æ–π –∂–µ –ë–î, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç Telegram –±–æ—Ç!
"""

# üèóÔ∏è –°–û–ó–î–ê–Å–ú FLASK –ü–†–ò–õ–û–ñ–ï–ù–ò–ï
app = Flask(__name__)
app.config.from_object(Config)

# üì¶ –ù–ê–°–¢–†–û–ô–ö–ê –°–ï–°–°–ò–ô
# –°–µ—Å—Å–∏–∏ –Ω—É–∂–Ω—ã —á—Ç–æ–±—ã –∑–∞–ø–æ–º–Ω–∏—Ç—å –∫—Ç–æ –≤–æ—à—ë–ª –≤ —Å–∏—Å—Ç–µ–º—É
app.config['SESSION_TYPE'] = 'filesystem'  # –•—Ä–∞–Ω–∏–º —Å–µ—Å—Å–∏–∏ –≤ —Ñ–∞–π–ª–∞—Ö (–Ω–µ –≤ –ø–∞–º—è—Ç–∏)
app.config['SESSION_PERMANENT'] = True
app.config['SESSION_USE_SIGNER'] = True  # –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º —Å–µ—Å—Å–∏–∏ (–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å)
Session(app)

# ‚úÖ –ù–û–í–û–ï: –°–æ–∑–¥–∞—ë–º extensions –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è loop
if not hasattr(app, 'extensions'):
    app.extensions = {}

# üåç –ì–õ–û–ë–ê–õ–¨–ù–ê–Ø –ü–ï–†–ï–ú–ï–ù–ù–ê–Ø –¥–ª—è event loop
# –ù—É–∂–Ω–∞ –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π (–±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ)
loop = None
db_initialized = False  # –§–ª–∞–≥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î


# üîÑ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ë–î –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
async def init_database():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ë–î –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ"""
    global db_initialized
    
    if not db_initialized:
        await initialize_db_pool()
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∞ –∫ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é")
        db_initialized = True


# üîÑ –ü–†–û–í–ï–†–ö–ê –ë–î –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ (–Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è!)
@app.before_request
def check_db():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ–º –ë–î –ø–µ—Ä–µ–¥ –∑–∞–ø—Ä–æ—Å–æ–º (–Ω–æ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º!)
    """
    global loop, db_initialized
    
    if loop is None:
        # –°–æ–∑–¥–∞—ë–º event loop —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑
        loop = asyncio.new_event_loop()
        asyncio.set_event_loop(loop)
        # ‚úÖ –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ extensions
        app.extensions['loop'] = loop
    
    # –ë–î —É–∂–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    if not db_initialized:
        # –ï—Å–ª–∏ –≤–¥—Ä—É–≥ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ - –¥–µ–ª–∞–µ–º —ç—Ç–æ —Å–µ–π—á–∞—Å
        loop.run_until_complete(init_database())


# üåç –ù–û–í–û–ï: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —è–∑—ã–∫–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
@app.before_request
def set_default_language():
    """
    –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —è–∑—ã–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç –≤ —Å–µ—Å—Å–∏–∏
    
    –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —è–∑—ã–∫–∞:
    1. –Ø–∑—ã–∫ –∏–∑ —Å–µ—Å—Å–∏–∏ (–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤—ã–±—Ä–∞–ª)
    2. –Ø–∑—ã–∫ –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞ Accept-Language –±—Ä–∞—É–∑–µ—Ä–∞
    3. –†—É—Å—Å–∫–∏–π —è–∑—ã–∫ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
    """
    if 'language' not in session:
        # –ü—ã—Ç–∞–µ–º—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —è–∑—ã–∫ –∏–∑ –±—Ä–∞—É–∑–µ—Ä–∞
        browser_lang = request.accept_languages.best_match(['ru', 'uk', 'en', 'de'])
        session['language'] = browser_lang if browser_lang else 'ru'


# üåç –ù–û–í–û–ï: Context processor - –¥–µ–ª–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –≤–æ –í–°–ï–• —à–∞–±–ª–æ–Ω–∞—Ö
@app.context_processor
def inject_language():
    """
    –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤—Å–µ—Ö —à–∞–±–ª–æ–Ω–æ–≤:
    - lang: —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ ('ru', 'uk', 'en', 'de')
    - t: —Ñ—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞
    - supported_languages: —Å–ø–∏—Å–æ–∫ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —è–∑—ã–∫–æ–≤
    
    –¢–µ–ø–µ—Ä—å –≤ –ª—é–±–æ–º HTML —à–∞–±–ª–æ–Ω–µ –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å:
    {{ t('welcome', lang) }}
    """
    return {
        'lang': get_current_language(session),
        't': t,
        'supported_languages': get_supported_languages()
    }


# üè† –ì–õ–ê–í–ù–ê–Ø –°–¢–†–ê–ù–ò–¶–ê
@app.route('/')
def index():
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    
    –õ–æ–≥–∏–∫–∞:
    - –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤–æ—à—ë–ª (–µ—Å—Ç—å session['user_id']) ‚Üí —Ä–µ–¥–∏—Ä–µ–∫—Ç –≤ dashboard
    - –ï—Å–ª–∏ –Ω–µ –≤–æ—à—ë–ª ‚Üí –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –∫–Ω–æ–ø–∫–æ–π "–í–æ–π—Ç–∏"
    """
    if 'user_id' in session:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –∫–∞–±–∏–Ω–µ—Ç
        return redirect(url_for('dashboard.dashboard'))
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    return render_template('index.html')


# üîê –°–¢–†–ê–ù–ò–¶–ê –í–•–û–î–ê
@app.route('/login')
def login():
    """
    –°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ Google OAuth
    
    –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∫–Ω–æ–ø–∫–∞ "–í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Google"
    """
    if 'user_id' in session:
        # –£–∂–µ –≤–æ—à–ª–∏ - —Ä–µ–¥–∏—Ä–µ–∫—Ç –≤ –∫–∞–±–∏–Ω–µ—Ç
        return redirect(url_for('dashboard.dashboard'))
    
    return render_template('login.html')


# üö™ –í–´–•–û–î
@app.route('/logout')
def logout():
    """
    –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
    
    –ß—Ç–æ –¥–µ–ª–∞–µ–º:
    1. –£–¥–∞–ª—è–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–µ—Å—Å–∏–∏
    2. –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    """
    session.clear()
    return redirect(url_for('index'))


# üåç –ù–û–í–û–ï: –°–º–µ–Ω–∞ —è–∑—ã–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
@app.route('/set-language/<lang>')
def set_language_route(lang):
    """
    –ò–∑–º–µ–Ω—è–µ—Ç —è–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    
    Args:
        lang: –ö–æ–¥ —è–∑—ã–∫–∞ ('ru', 'uk', 'en', 'de')
    
    –õ–æ–≥–∏–∫–∞:
    1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —è–∑—ã–∫ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è
    2. –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Å–µ—Å—Å–∏—é
    3. –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Ç—É –∂–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É (–∏—Å–ø–æ–ª—å–∑—É—è request.referrer)
    
    –ü—Ä–∏–º–µ—Ä—ã URL:
    - /set-language/ru - –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ —Ä—É—Å—Å–∫–∏–π
    - /set-language/en - –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π
    """
    if lang in ['ru', 'uk', 'en', 'de']:
        set_language(session, lang)
        print(f"üåç –Ø–∑—ã–∫ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞: {lang}")
    else:
        print(f"‚ö†Ô∏è –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —è–∑—ã–∫: {lang}")
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–ª–∏ –Ω–∞ –≥–ª–∞–≤–Ω—É—é
    return redirect(request.referrer or url_for('index'))


# üìö –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –ú–ê–†–®–†–£–¢–û–í (blueprints)
# Blueprints - —ç—Ç–æ –∫–∞–∫ –º–æ–¥—É–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ –≥—Ä—É–ø–ø–∏—Ä—É—é—Ç —Å–≤—è–∑–∞–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã

try:
    from webapp.routes.auth import auth_bp, init_oauth
    from webapp.routes.dashboard import dashboard_bp
    from webapp.routes.api import api_bp
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º OAuth
    init_oauth(app)
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –º–∞—Ä—à—Ä—É—Ç—ã
    app.register_blueprint(auth_bp, url_prefix='/auth')        # /auth/...
    app.register_blueprint(dashboard_bp, url_prefix='/dashboard')  # /dashboard/...
    app.register_blueprint(api_bp, url_prefix='/api')          # /api/...
    
    print("‚úÖ –í—Å–µ –º–∞—Ä—à—Ä—É—Ç—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
    
except ImportError as e:
    print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –º–∞—Ä—à—Ä—É—Ç—ã: {e}")
    print("–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª—ã: routes/auth.py, routes/dashboard.py, routes/api.py")


# üßπ –ó–ê–ö–†–´–¢–ò–ï –ë–î –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–ü–†–ê–í–ò–õ–¨–ù–û)
# –£–±—Ä–∞–ª–∏ teardown_appcontext - –æ–Ω –∑–∞–∫—Ä—ã–≤–∞–ª –ø—É–ª –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞!
# –¢–µ–ø–µ—Ä—å –ø—É–ª –±—É–¥–µ—Ç –∑–∞–∫—Ä—ã—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –≤—Å–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

import atexit

@atexit.register
def cleanup():
    """
    –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø—É–ª –ë–î –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞ Python
    –≠—Ç–æ –≤—ã–∑–æ–≤–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Ä–µ–∞–ª—å–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (Ctrl+C)
    """
    global loop
    if loop and not loop.is_closed():
        try:
            loop.run_until_complete(close_db_pool())
            print("üßπ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–∫—Ä—ã—Ç–∞")
        except:
            pass


# üöÄ –ó–ê–ü–£–°–ö –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø
if __name__ == '__main__':
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
    if not validate_config():
        print("\n‚ùå –ò—Å–ø—Ä–∞–≤—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ .env —Ñ–∞–π–ª–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞\n")
        sys.exit(1)
    
    print("\n" + "="*50)
    print("üè• –ú–ï–î–ò–¶–ò–ù–°–ö–ò–ô –ë–û–¢ - –í–ï–ë –í–ï–†–°–ò–Ø")
    print("="*50)
    print(f"üåê –û—Ç–∫—Ä—ã—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ: http://localhost:5000")
    print(f"üîí –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ä–µ–∂–∏–º: {'ON' if Config.DEBUG else 'OFF'}")
    print(f"üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: PostgreSQL (Supabase)")
    print(f"üåç –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —è–∑—ã–∫–æ–≤: RU, UK, EN, DE")
    print("="*50 + "\n")
    
    # ‚ú® –ù–û–í–û–ï: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î –ü–ï–†–ï–î –∑–∞–ø—É—Å–∫–æ–º —Å–µ—Ä–≤–µ—Ä–∞
    print("üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)
    
    # ‚úÖ –ö–†–ò–¢–ò–ß–ù–û: –°–æ—Ö—Ä–∞–Ω—è–µ–º loop –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ API
    app.extensions['loop'] = loop
    
    loop.run_until_complete(init_database())
    print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞!\n")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask —Å–µ—Ä–≤–µ—Ä
    app.run(
        host='0.0.0.0',      # –°–ª—É—à–∞–µ–º –Ω–∞ –≤—Å–µ—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞—Ö
        port=5000,           # –ü–æ—Ä—Ç 5000
        debug=Config.DEBUG   # –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏ (–∏–∑ .env)
    )