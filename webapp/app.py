# webapp/app.py
# üåê –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –±–æ—Ç–∞
# ‚úÖ –ü–û–õ–ù–û–°–¢–¨–Æ –ê–°–ò–ù–•–†–û–ù–ù–´–ô - –±–µ–∑ –∫–æ—Å—Ç—ã–ª–µ–π —Å loop!

import os
import sys
from pathlib import Path
from contextlib import asynccontextmanager
from fastapi import FastAPI, Request
from fastapi.responses import HTMLResponse, RedirectResponse
from fastapi.staticfiles import StaticFiles
from fastapi.templating import Jinja2Templates
from starlette.middleware.sessions import SessionMiddleware

# üìÅ –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ –ø—É—Ç—å (—á—Ç–æ–±—ã –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å db_postgresql.py)
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

# üîß –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
from webapp.config import Config, validate_config

# üåç –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏
from webapp.translations import t, get_current_language, set_language, get_supported_languages

# üóÑÔ∏è –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
from db_postgresql import initialize_db_pool, close_db_pool, update_user_profile

from webapp.utils.flash import get_flashed_messages, flash

from webapp.utils.context import get_template_context

"""
üéØ –ß–¢–û –î–ï–õ–ê–ï–¢ –≠–¢–û –ü–†–ò–õ–û–ñ–ï–ù–ò–ï:

1. –ó–∞–ø—É—Å–∫–∞–µ—Ç FastAPI —Å–µ—Ä–≤–µ—Ä (ASYNC!)
2. –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –≤—Ö–æ–¥–∏—Ç—å —á–µ—Ä–µ–∑ Google
3. –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ PostgreSQL
4. –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —á–∞—Ç —Å –ò–ò (–∏—Å–ø–æ–ª—å–∑—É—è gpt.py)
5. –ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
6. üÜï –ü–û–õ–ù–û–°–¢–¨–Æ –ê–°–ò–ù–•–†–û–ù–ù–´–ô - –Ω–µ—Ç –∫–æ—Å—Ç—ã–ª–µ–π —Å loop.run_until_complete!

–í–°–ï –¥–∞–Ω–Ω—ã–µ –±–µ—Ä—É—Ç—Å—è –∏–∑ —Ç–æ–π –∂–µ –ë–î, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç Telegram –±–æ—Ç!
"""

# ==========================================
# üîÑ LIFESPAN: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º
# ==========================================

@asynccontextmanager
async def lifespan(app: FastAPI):
    """
    –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    (—Å–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–º–µ–Ω–∞ on_event startup/shutdown)
    """
    # ==========================================
    # üöÄ STARTUP (–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ)
    # ==========================================
    print("\n" + "="*50)
    print("üè• –ú–ï–î–ò–¶–ò–ù–°–ö–ò–ô –ë–û–¢ - FASTAPI –í–ï–†–°–ò–Ø")
    print("="*50)
    print("üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        await initialize_db_pool()
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∞!")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")
        raise
    
    print(f"üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: PostgreSQL (Supabase)")
    print(f"üåç –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —è–∑—ã–∫–æ–≤: RU, UK, EN, DE")
    print(f"‚ö° –†–µ–∂–∏–º: –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π (FastAPI)")
    print("="*50 + "\n")
    
    # ‚úÖ yield = –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∑–¥–µ—Å—å
    yield
    
    # ==========================================
    # üõë SHUTDOWN (–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ)
    # ==========================================
    print("\nüßπ –ó–∞–∫—Ä—ã—Ç–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    try:
        await close_db_pool()
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–∫—Ä—ã—Ç–∞")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –ë–î: {e}")

# üèóÔ∏è –°–û–ó–î–ê–Å–ú FASTAPI –ü–†–ò–õ–û–ñ–ï–ù–ò–ï
app = FastAPI(
    title="–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –ë–æ—Ç - –í–µ–± –í–µ—Ä—Å–∏—è",
    description="–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –±–æ—Ç–∞",
    version="2.0.0",
    lifespan=lifespan
)

# üîê –î–û–ë–ê–í–õ–Ø–ï–ú –ü–û–î–î–ï–†–ñ–ö–£ –°–ï–°–°–ò–ô (–∫–∞–∫ –≤ Flask)
app.add_middleware(SessionMiddleware, secret_key=Config.SECRET_KEY)

# üìÅ –ù–ê–°–¢–†–û–ô–ö–ê –®–ê–ë–õ–û–ù–û–í –ò –°–¢–ê–¢–ò–ö–ò
# –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ –∂–µ –ø–∞–ø–∫–∏ —á—Ç–æ –±—ã–ª–∏ –≤ Flask
templates = Jinja2Templates(directory="webapp/templates")
app.mount("/static", StaticFiles(directory="webapp/static"), name="static")
# ==========================================
# üìç –ë–ê–ó–û–í–´–ï –ú–ê–†–®–†–£–¢–´
# ==========================================

@app.get("/", response_class=HTMLResponse)
async def index(request: Request):
    """
    –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    
    –õ–æ–≥–∏–∫–∞:
    - –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤–æ—à—ë–ª ‚Üí —Ä–µ–¥–∏—Ä–µ–∫—Ç –≤ dashboard
    - –ï—Å–ª–∏ –Ω–µ –≤–æ—à—ë–ª ‚Üí –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    """
    if request.session.get('user_id'):
        return RedirectResponse(url='/dashboard', status_code=302)
    
    context = get_template_context(request)
    return templates.TemplateResponse('index.html', context)


@app.get("/login", response_class=HTMLResponse)
async def login(request: Request):
    """
    –°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ Google OAuth
    """
    if request.session.get('user_id'):
        return RedirectResponse(url='/dashboard', status_code=302)
    
    context = get_template_context(request)
    return templates.TemplateResponse('login.html', context)


@app.get("/logout")
async def logout(request: Request):
    """
    –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
    –û—á–∏—â–∞–µ–º —Å–µ—Å—Å–∏—é –∏ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é
    """
    request.session.clear()
    return RedirectResponse(url='/', status_code=302)


@app.get("/set-language/{lang}")
async def set_language_route(request: Request, lang: str):
    """
    –°–º–µ–Ω–∞ —è–∑—ã–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    
    ‚úÖ –°–ú–û–¢–†–ò –ö–ê–ö –ß–ò–°–¢–û! –ù–∏–∫–∞–∫–∏—Ö psycopg2!
    –ü—Ä–æ—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º –≥–æ—Ç–æ–≤—É—é async —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ db_postgresql.py
    """
    if lang in ['ru', 'uk', 'en', 'de']:
        request.session['language'] = lang
        print(f"üåç –Ø–∑—ã–∫ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞: {lang}")
        
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω - —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
        user_id = request.session.get('user_id')
        if user_id:
            try:
                # ‚úÖ –ü–†–û–°–¢–û AWAIT! –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–æ—Ç–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é!
                await update_user_profile(user_id, 'language', lang)
                print(f"‚úÖ –Ø–∑—ã–∫ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ –ë–î –¥–ª—è user_id={user_id}")
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —è–∑—ã–∫–∞: {e}")
    
    # –†–µ–¥–∏—Ä–µ–∫—Ç–∏–º –æ–±—Ä–∞—Ç–Ω–æ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    referer = request.headers.get('referer', '/')
    return RedirectResponse(url=referer, status_code=302)


# ==========================================
# üìö –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –†–û–£–¢–ï–†–û–í (Blueprints –≤ FastAPI)
# ==========================================

try:
    from webapp.routes import auth, dashboard, api
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä—ã (–∫–∞–∫ blueprints –≤ Flask)
    app.include_router(auth.router, prefix="/auth", tags=["auth"])
    app.include_router(dashboard.router, prefix="/dashboard", tags=["dashboard"])
    app.include_router(api.router, prefix="/api", tags=["api"])
    
    print("‚úÖ –í—Å–µ —Ä–æ—É—Ç–µ—Ä—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
    
except ImportError as e:
    print(f"‚ö†Ô∏è –†–æ—É—Ç–µ—Ä—ã –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã —Å–ª–µ–¥—É—é—â–∏–º —à–∞–≥–æ–º: {e}")


# ==========================================
# üß™ –¢–ï–°–¢–û–í–´–ï –†–û–£–¢–´
# ==========================================

@app.get("/test")
async def test_route():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ FastAPI —Ä–∞–±–æ—Ç–∞–µ—Ç"""
    return {
        "status": "ok",
        "message": "FastAPI —Ä–∞–±–æ—Ç–∞–µ—Ç! üöÄ",
        "version": "2.0.0",
        "framework": "FastAPI (async)"
    }


@app.get("/health")
async def health_check():
    """Health check –¥–ª—è Railway/–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
    try:
        from db_postgresql import db_pool
        
        if db_pool:
            return {
                "status": "healthy",
                "database": "connected",
                "version": "2.0.0"
            }
        else:
            return {
                "status": "unhealthy",
                "database": "disconnected"
            }
    except Exception as e:
        return {
            "status": "unhealthy",
            "error": str(e)
        }


# ==========================================
# üöÄ –ó–ê–ü–£–°–ö (–¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
# ==========================================

if __name__ == "__main__":
    import uvicorn
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    if not validate_config():
        print("\n‚ùå –ò—Å–ø—Ä–∞–≤—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ .env —Ñ–∞–π–ª–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞\n")
        sys.exit(1)
    
    # ‚úÖ –ß–ò–¢–ê–ï–ú DEBUG –∏–∑ .env
    debug_mode = os.getenv('DEBUG', 'false').lower() == 'true'
    
    print("\nüöÄ –ó–∞–ø—É—Å–∫ FastAPI —Å–µ—Ä–≤–µ—Ä–∞...")
    print(f"üêõ –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏: {'ON (–∞–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞)' if debug_mode else 'OFF'}")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –Ω–∞ —Ç–æ–º –∂–µ –ø–æ—Ä—Ç—É —á—Ç–æ –±—ã–ª Flask (5000)
    uvicorn.run(
        "webapp.app:app",
        host="0.0.0.0",
        port=5000,
        reload=debug_mode,  # ‚Üê –ò–ó–ú–ï–ù–ò–õ–ò! –¢–µ–ø–µ—Ä—å –±–µ—Ä—ë—Ç—Å—è –∏–∑ .env
        log_level="info"
    )