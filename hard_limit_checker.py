# hard_limit_checker.py
"""
üö´ –ú–æ–¥—É–ª—å –ø—Ä–æ–≤–µ—Ä–∫–∏ –∂—ë—Å—Ç–∫–æ–≥–æ –ª–∏–º–∏—Ç–∞ –Ω–∞ 100 —Å–æ–æ–±—â–µ–Ω–∏–π

–ë–ª–æ–∫–∏—Ä—É–µ—Ç –±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–æ—Å–ª–µ 100 —Å–æ–æ–±—â–µ–Ω–∏–π, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
–Ω–µ –ø–æ–∫—É–ø–∞–ª –Ω–∏—á–µ–≥–æ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 35 –¥–Ω–µ–π.
"""

import logging
from datetime import datetime, timedelta
from typing import Tuple
from db_postgresql import fetch_one, get_user_language

logger = logging.getLogger(__name__)


async def check_100_message_hard_limit(user_id: int) -> Tuple[bool, str]:
    """
    üö´ –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç–∏–≥ –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∂—ë—Å—Ç–∫–æ–≥–æ –ª–∏–º–∏—Ç–∞ –≤ 100 —Å–æ–æ–±—â–µ–Ω–∏–π
    
    –ë–ª–æ–∫–∏—Ä—É–µ—Ç –¥–∞–ª—å–Ω–µ–π—à–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –µ—Å–ª–∏:
    1. total_messages_count >= 100
    2. –ù–µ –±—ã–ª–æ –ø–æ–∫—É–ø–æ–∫ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 35 –¥–Ω–µ–π
    
    –õ–æ–≥–∏–∫–∞: –ï—Å–ª–∏ –±—ã–ª–∞ –ª—é–±–∞—è –ø–æ–∫—É–ø–∫–∞ (–ø–æ–¥–ø–∏—Å–∫–∞ –∏–ª–∏ —Ä–∞–∑–æ–≤–∞—è) –∑–∞ 35 –¥–Ω–µ–π,
    –∑–Ω–∞—á–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–ª–∞—Ç–∏–ª –Ω–µ–¥–∞–≤–Ω–æ ‚Üí –ø—Ä–æ–ø—É—Å–∫–∞–µ–º.
    
    Args:
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        
    Returns:
        Tuple[bool, str]: (–º–æ–∂–Ω–æ_–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, —Å–æ–æ–±—â–µ–Ω–∏–µ_–æ–±_–æ—à–∏–±–∫–µ)
        - (True, "") - –ª–∏–º–∏—Ç –Ω–µ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç, –º–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å
        - (False, "—Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏") - –ª–∏–º–∏—Ç –¥–æ—Å—Ç–∏–≥–Ω—É—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    """
    try:
        # 1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—á—ë—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –Ω–∞–ª–∏—á–∏–µ –ø–æ–∫—É–ø–æ–∫ –æ–¥–Ω–∏–º –∑–∞–ø—Ä–æ—Å–æ–º
        result = await fetch_one("""
            SELECT 
                u.total_messages_count,
                EXISTS(
                    SELECT 1 
                    FROM transactions t
                    WHERE t.user_id = u.user_id
                      AND t.status = 'completed'
                      AND t.completed_at >= NOW() - INTERVAL '35 days'
                ) as has_recent_purchase
            FROM users u
            WHERE u.user_id = $1
        """, (user_id,))
        
        if not result:
            logger.warning(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ë–î")
            return True, ""  # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
        
        total_messages = result[0] if isinstance(result, tuple) else result.get('total_messages_count', 0)
        has_recent_purchase = result[1] if isinstance(result, tuple) else result.get('has_recent_purchase', False)
        
        # 2Ô∏è‚É£ –ï—Å–ª–∏ –º–µ–Ω—å—à–µ 100 —Å–æ–æ–±—â–µ–Ω–∏–π - –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ –Ω—É–∂–Ω–∞
        if total_messages < 100:
            return True, ""
        
        logger.info(f"üìä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id}: {total_messages} —Å–æ–æ–±—â–µ–Ω–∏–π (–ø—Ä–æ–≤–µ—Ä—è–µ–º hard limit)")
        
        # 3Ô∏è‚É£ –ï—Å–ª–∏ –±—ã–ª–∞ –ø–æ–∫—É–ø–∫–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 35 –¥–Ω–µ–π - —Ä–∞–∑—Ä–µ—à–∞–µ–º
        if has_recent_purchase:
            logger.info(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id}: –µ—Å—Ç—å –ø–æ–∫—É–ø–∫–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 35 –¥–Ω–µ–π")
            return True, ""
        
        # 4Ô∏è‚É£ –ù–ï–¢ –ü–û–ö–£–ü–û–ö –ò >= 100 –°–û–û–ë–©–ï–ù–ò–ô - –ë–õ–û–ö–ò–†–£–ï–ú!
        logger.warning(f"üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id}: –¥–æ—Å—Ç–∏–≥–Ω—É—Ç hard limit (100+ —Å–æ–æ–±—â–µ–Ω–∏–π, –Ω–µ—Ç –ø–æ–∫—É–ø–æ–∫ –∑–∞ 35 –¥–Ω–µ–π)")
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –Ω—É–∂–Ω–æ–º —è–∑—ã–∫–µ
        lang = await get_user_language(user_id)
        
        if lang == 'ru':
            error_message = (
                "üéâ <b>–í—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ 100 –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π!</b>\n\n"
                "üí° –ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–º –±–æ—Ç–æ–º, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:\n\n"
                "üíé <b>–û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É</b>\n"
                "   ‚Ä¢ –î–æ 100 —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –¥–µ–Ω—å\n"
                "   ‚Ä¢ –î–µ—Ç–∞–ª—å–Ω—ã–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏\n"
                "   ‚Ä¢ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ 40 –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –¥–µ–Ω—å\n"
                "   ‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞\n\n"
                "üéØ <b>–ö—É–ø–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏</b>\n"
                "   ‚Ä¢ –†–∞–∑–æ–≤–∞—è –ø–æ–∫—É–ø–∫–∞ –±–µ–∑ –ø–æ–¥–ø–∏—Å–∫–∏\n"
                "   ‚Ä¢ –î–µ—Ç–∞–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –æ—Ç GPT-4\n"
                "   ‚Ä¢ –î–µ–π—Å—Ç–≤—É–µ—Ç 30 –¥–Ω–µ–π\n\n"
                "üì≤ –ù–∞–∂–º–∏—Ç–µ /subscription —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å —Ç–∞—Ä–∏—Ñ"
            )
        else:
            error_message = (
                "üéâ <b>You've used 100 free messages!</b>\n\n"
                "üí° To continue using the medical bot, choose one of the options:\n\n"
                "üíé <b>Get a subscription</b>\n"
                "   ‚Ä¢ Up to 100 messages per day\n"
                "   ‚Ä¢ Detailed medical consultations\n"
                "   ‚Ä¢ Upload up to 40 documents per day\n"
                "   ‚Ä¢ Priority support\n\n"
                "üéØ <b>Buy additional consultations</b>\n"
                "   ‚Ä¢ One-time purchase without subscription\n"
                "   ‚Ä¢ Detailed GPT-4 responses\n"
                "   ‚Ä¢ Valid for 30 days\n\n"
                "üì≤ Press /subscription to choose a plan"
            )
        
        return False, error_message
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ hard limit –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
        # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ - —Ä–∞–∑—Ä–µ—à–∞–µ–º (—á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑-–∑–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–±–ª–µ–º—ã)
        return True, ""