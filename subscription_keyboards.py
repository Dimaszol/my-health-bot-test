# subscription_keyboards.py - –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –ø–æ–¥–ø–∏—Å–æ–∫

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from stripe_config import StripeConfig
from typing import Optional
from db_postgresql import t

def subscription_main_menu(lang: str, current_subscription: Optional[str] = None) -> InlineKeyboardMarkup:
    """‚úÖ –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –≤–µ—Ä—Å–∏—è –ë–ï–ó –∫–Ω–æ–ø–∫–∏ –ú–æ–∏ –ª–∏–º–∏—Ç—ã"""
    
    buttons = []
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–∞–∫–µ—Ç—ã –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    packages = StripeConfig.get_all_packages()
    
    for package_id, package_info in packages.items():
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏ –≤–º–µ—Å—Ç–æ –ø—Ä—è–º–æ–≥–æ –ø–æ–ª—è
        package_name = StripeConfig.get_localized_package_name(package_id, lang)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
        if package_info['type'] == 'subscription':
            price_text = f"{package_info['price_display']}{t('subscription_monthly', lang)}"
        else:
            price_text = f"{package_info['price_display']} {t('subscription_one_time', lang)}"
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
        button_text = f"{package_name} ‚Äî {price_text}"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É
        if current_subscription == package_id:
            # –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å —ç—Ç–∞ –ø–æ–¥–ø–∏—Å–∫–∞
            button_text = f"{t('subscription_current_active', lang)} {button_text}"
            buttons.append([InlineKeyboardButton(
                text=button_text, 
                callback_data="subscription_current"
            )])
        else:
            # –û–±—ã—á–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –ø–æ–∫—É–ø–∫–∏
            buttons.append([InlineKeyboardButton(
                text=button_text,
                callback_data=f"buy_{package_id}"
            )])
       
    # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã –ø–æ–¥–ø–∏—Å–∫–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞)
    if current_subscription is not None:
        buttons.append([InlineKeyboardButton(text=t("subscription_cancel", lang), callback_data="cancel_subscription")])
    
    # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
    buttons.append([InlineKeyboardButton(text=t("subscription_back", lang), callback_data="back_to_settings")])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def purchase_confirmation_keyboard(package_id: str, lang: str) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–∫—É–ø–∫–∏
    
    Args:
        package_id: ID –ø–∞–∫–µ—Ç–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏
        lang: –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    """
    
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=t("purchase_confirm_pay", lang), callback_data=f"confirm_purchase_{package_id}")],
        [InlineKeyboardButton(text=t("purchase_cancel", lang), callback_data="subscription_menu")]
    ])

def subscription_upsell_keyboard(lang: str) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –ø–æ–¥–ø–∏—Å–∫–µ (–∫–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –ª–∏–º–∏—Ç—ã)
    
    Args:
        lang: –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    """
    
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=t("upsell_get_subscription", lang), callback_data="subscription_menu")],
        [InlineKeyboardButton(text=t("upsell_later", lang), callback_data="dismiss_upsell")]
    ])

def cancel_subscription_confirmation(lang: str) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–º–µ–Ω—ã –ø–æ–¥–ø–∏—Å–∫–∏
    
    Args:
        lang: –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    """
    
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=t("cancel_confirm_yes", lang), callback_data="confirm_cancel_subscription")],
        [InlineKeyboardButton(text=t("cancel_confirm_no", lang), callback_data="subscription_menu")]
    ])

def payment_processing_keyboard(lang: str, payment_url: str = None) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–ª–∞—Ç–µ–∂–∞
    
    Args:
        lang: –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        payment_url: URL –¥–ª—è –æ–ø–ª–∞—Ç—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    """
    buttons = []
    
    # –ï—Å–ª–∏ –µ—Å—Ç—å —Å—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É - –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É
    if payment_url:
        buttons.append([InlineKeyboardButton(text="üí≥ –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ", url=payment_url)])
    
    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    buttons.append([InlineKeyboardButton(text=t("payment_back_to_subscriptions", lang), callback_data="subscription_menu")])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)

# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–∞–∫–µ—Ç–∞—Ö

def get_package_description(package_id: str, lang: str) -> str:
    """–ü–æ–ª—É—á–∞–µ—Ç –∫—Ä–∞—Å–∏–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–∞–∫–µ—Ç–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–∫—É–ø–∫–∏"""
    
    package_info = StripeConfig.get_package_info(package_id)
    if not package_info:
        return t("package_not_found", lang)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
    description_parts = []
    
    # ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
    package_name = StripeConfig.get_localized_package_name(package_id, lang)
    description_parts.append(f"**{package_name}**")
    
    # –¶–µ–Ω–∞
    if package_info['type'] == 'subscription':
        price_text = f"{package_info['price_display']}/month"
        type_desc = t("package_subscription_desc", lang)
    else:
        price_text = package_info['price_display']
        type_desc = t("package_one_time_desc", lang)
    
    description_parts.append(f"{t('package_price_label', lang)} {price_text}")
    description_parts.append(type_desc)
    description_parts.append("")  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
    
    # ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏
    description_parts.append(t("package_features_title", lang))
    features = StripeConfig.get_localized_package_features(package_id, lang)
    for feature in features:
        description_parts.append(f"‚úÖ {feature}")
    
    return "\n".join(description_parts)