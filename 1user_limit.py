# admin_limits.py - –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª–∏–º–∏—Ç–∞–º–∏

import sqlite3
from datetime import datetime, timedelta

class LimitsAdmin:
    def __init__(self):
        self.db_path = "users.db"
    
    def get_user_limits(self, user_id: int):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –ª–∏–º–∏—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        try:
            conn = sqlite3.connect(self.db_path)
            cursor = conn.cursor()
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
            cursor.execute("SELECT name FROM users WHERE user_id = ?", (user_id,))
            user_info = cursor.fetchone()
            
            if not user_info:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                conn.close()
                return
            
            # –ü–æ–ª—É—á–∞–µ–º –ª–∏–º–∏—Ç—ã
            cursor.execute("""
                SELECT documents_left, gpt4o_queries_left, subscription_type, 
                       subscription_expires_at, created_at, updated_at
                FROM user_limits 
                WHERE user_id = ?
            """, (user_id,))
            
            limits = cursor.fetchone()
            
            print(f"\nüë§ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨: {user_info[0]} (ID: {user_id})")
            print("=" * 50)
            
            if limits:
                docs, queries, sub_type, expires, created, updated = limits
                print(f"üìÑ –î–æ–∫—É–º–µ–Ω—Ç—ã: {docs}")
                print(f"ü§ñ GPT-4o –∑–∞–ø—Ä–æ—Å—ã: {queries}")
                print(f"üí≥ –¢–∏–ø –ø–æ–¥–ø–∏—Å–∫–∏: {sub_type}")
                print(f"‚è∞ –ò—Å—Ç–µ–∫–∞–µ—Ç: {expires or '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ'}")
                print(f"üìÖ –°–æ–∑–¥–∞–Ω–æ: {created}")
                print(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {updated}")
            else:
                print("‚ùå –õ–∏–º–∏—Ç—ã –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
            
            conn.close()
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    def set_limits(self, user_id: int, documents: int, gpt4o_queries: int):
        """–ò–∑–º–µ–Ω–∏—Ç—å —Ç–æ–ª—å–∫–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ –∑–∞–ø—Ä–æ—Å–æ–≤ (—Ç–∏–ø –ø–æ–¥–ø–∏—Å–∫–∏ –æ—Å—Ç–∞–µ—Ç—Å—è)"""
        try:
            conn = sqlite3.connect(self.db_path)
            cursor = conn.cursor()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            cursor.execute("SELECT name FROM users WHERE user_id = ?", (user_id,))
            user_info = cursor.fetchone()
            if not user_info:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ")
                conn.close()
                return
            
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏
            cursor.execute("""
                SELECT subscription_type, subscription_expires_at, created_at
                FROM user_limits WHERE user_id = ?
            """, (user_id,))
            
            current_data = cursor.fetchone()
            
            if current_data:
                # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ª–∏–º–∏—Ç—ã, –æ—Å—Ç–∞–≤–ª—è—è —Ç–∏–ø –ø–æ–¥–ø–∏—Å–∫–∏ –∏ –¥–∞—Ç—É
                current_type, current_expires, created_at = current_data
                
                cursor.execute("""
                    UPDATE user_limits 
                    SET documents_left = ?, 
                        gpt4o_queries_left = ?, 
                        updated_at = ?
                    WHERE user_id = ?
                """, (documents, gpt4o_queries, datetime.now().isoformat(), user_id))
                
                print(f"\n‚úÖ –õ–∏–º–∏—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} ({user_info[0]}):")
                print(f"üìÑ –î–æ–∫—É–º–µ–Ω—Ç—ã: {documents}")
                print(f"ü§ñ GPT-4o –∑–∞–ø—Ä–æ—Å—ã: {gpt4o_queries}")
                print(f"üí≥ –¢–∏–ø: {current_type} (–Ω–µ –∏–∑–º–µ–Ω–µ–Ω)")
                print(f"‚è∞ –ò—Å—Ç–µ–∫–∞–µ—Ç: {current_expires or '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ'} (–Ω–µ –∏–∑–º–µ–Ω–µ–Ω–æ)")
                
            else:
                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å —Å –±–∞–∑–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
                expires_at = datetime.now() + timedelta(days=30)
                
                cursor.execute("""
                    INSERT INTO user_limits 
                    (user_id, documents_left, gpt4o_queries_left, subscription_type, 
                     subscription_expires_at, created_at, updated_at)
                    VALUES (?, ?, ?, 'one_time', ?, ?, ?)
                """, (
                    user_id, documents, gpt4o_queries,
                    expires_at.isoformat(),
                    datetime.now().isoformat(),
                    datetime.now().isoformat()
                ))
                
                print(f"\n‚úÖ –õ–∏–º–∏—Ç—ã —Å–æ–∑–¥–∞–Ω—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} ({user_info[0]}):")
                print(f"üìÑ –î–æ–∫—É–º–µ–Ω—Ç—ã: {documents}")
                print(f"ü§ñ GPT-4o –∑–∞–ø—Ä–æ—Å—ã: {gpt4o_queries}")
                print(f"üí≥ –¢–∏–ø: one_time (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)")
                print(f"‚è∞ –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –¥–æ: {expires_at.strftime('%Y-%m-%d %H:%M')}")
            
            conn.commit()
            conn.close()
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    def reset_limits(self, user_id: int):
        """–°–±—Ä–æ—Å–∏—Ç—å —Ç–æ–ª—å–∫–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–æ –Ω—É–ª—è (–ø–æ–¥–ø–∏—Å–∫–∞ –æ—Å—Ç–∞–µ—Ç—Å—è)"""
        try:
            conn = sqlite3.connect(self.db_path)
            cursor = conn.cursor()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            cursor.execute("SELECT name FROM users WHERE user_id = ?", (user_id,))
            user_info = cursor.fetchone()
            if not user_info:
                print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ")
                conn.close()
                return
            
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏
            cursor.execute("""
                SELECT subscription_type, subscription_expires_at, created_at
                FROM user_limits WHERE user_id = ?
            """, (user_id,))
            
            current_data = cursor.fetchone()
            
            if current_data:
                # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ª–∏–º–∏—Ç—ã, –æ—Å—Ç–∞–≤–ª—è—è –ø–æ–¥–ø–∏—Å–∫—É
                current_type, current_expires, created_at = current_data
                
                cursor.execute("""
                    UPDATE user_limits 
                    SET documents_left = 0, 
                        gpt4o_queries_left = 0, 
                        updated_at = ?
                    WHERE user_id = ?
                """, (datetime.now().isoformat(), user_id))
                
                print(f"üîÑ –õ–∏–º–∏—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} ({user_info[0]}) —Å–±—Ä–æ—à–µ–Ω—ã –¥–æ –Ω—É–ª—è")
                print(f"üìÑ –î–æ–∫—É–º–µ–Ω—Ç—ã: 0")
                print(f"ü§ñ GPT-4o –∑–∞–ø—Ä–æ—Å—ã: 0")
                print(f"üí≥ –¢–∏–ø: {current_type} (–Ω–µ –∏–∑–º–µ–Ω–µ–Ω)")
                print(f"‚è∞ –ò—Å—Ç–µ–∫–∞–µ—Ç: {current_expires or '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ'} (–Ω–µ –∏–∑–º–µ–Ω–µ–Ω–æ)")
                
            else:
                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å —Å –Ω—É–ª–µ–≤—ã–º–∏ –ª–∏–º–∏—Ç–∞–º–∏
                cursor.execute("""
                    INSERT INTO user_limits 
                    (user_id, documents_left, gpt4o_queries_left, subscription_type, created_at, updated_at)
                    VALUES (?, 0, 0, 'free', ?, ?)
                """, (user_id, datetime.now().isoformat(), datetime.now().isoformat()))
                
                print(f"üîÑ –°–æ–∑–¥–∞–Ω—ã –Ω—É–ª–µ–≤—ã–µ –ª–∏–º–∏—Ç—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} ({user_info[0]})")
                print(f"üìÑ –î–æ–∫—É–º–µ–Ω—Ç—ã: 0")
                print(f"ü§ñ GPT-4o –∑–∞–ø—Ä–æ—Å—ã: 0")
                print(f"üí≥ –¢–∏–ø: free (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)")
            
            conn.commit()
            conn.close()
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    def list_all_users(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ª–∏–º–∏—Ç–∞–º–∏"""
        try:
            conn = sqlite3.connect(self.db_path)
            cursor = conn.cursor()
            
            cursor.execute("""
                SELECT u.user_id, u.name, 
                       COALESCE(l.documents_left, 0) as docs,
                       COALESCE(l.gpt4o_queries_left, 0) as queries,
                       COALESCE(l.subscription_type, 'free') as type,
                       l.subscription_expires_at
                FROM users u
                LEFT JOIN user_limits l ON u.user_id = l.user_id
                ORDER BY u.user_id
            """)
            
            users = cursor.fetchall()
            
            print(f"\nüë• –í–°–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò ({len(users)}):")
            print("=" * 80)
            print(f"{'ID':<12} {'–ò–º—è':<20} {'–î–æ–∫.':<6} {'GPT-4o':<8} {'–¢–∏–ø':<12} {'–ò—Å—Ç–µ–∫–∞–µ—Ç':<15}")
            print("-" * 80)
            
            for user_id, name, docs, queries, sub_type, expires in users:
                expires_str = expires[:10] if expires else "‚Äî"
                name_short = (name[:17] + "...") if name and len(name) > 20 else (name or "–ë–µ–∑ –∏–º–µ–Ω–∏")
                print(f"{user_id:<12} {name_short:<20} {docs:<6} {queries:<8} {sub_type:<12} {expires_str:<15}")
            
            conn.close()
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def main():
    admin = LimitsAdmin()
    
    print("üîß –ê–î–ú–ò–ù –ü–ê–ù–ï–õ–¨ –£–ü–†–ê–í–õ–ï–ù–ò–Ø –õ–ò–ú–ò–¢–ê–ú–ò")
    print("=" * 50)
    
    while True:
        print("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
        print("1. –ü–æ–∫–∞–∑–∞—Ç—å –ª–∏–º–∏—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        print("2. –ò–∑–º–µ–Ω–∏—Ç—å –ª–∏–º–∏—Ç—ã")
        print("3. –°–±—Ä–æ—Å–∏—Ç—å –ª–∏–º–∏—Ç—ã")
        print("4. –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        print("0. –í—ã—Ö–æ–¥")
        
        choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä: ").strip()
        
        if choice == "0":
            print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
            
        elif choice == "1":
            try:
                user_id = int(input("–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: "))
                admin.get_user_limits(user_id)
            except ValueError:
                print("‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            
        elif choice == "2":
            try:
                user_id = int(input("–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: "))
                documents = int(input("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: "))
                gpt4o_queries = int(input("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ GPT-4o –∑–∞–ø—Ä–æ—Å–æ–≤: "))
                
                admin.set_limits(user_id, documents, gpt4o_queries)
                
            except ValueError:
                print("‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è")
            
        elif choice == "3":
            try:
                user_id = int(input("–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: "))
                admin.reset_limits(user_id)
            except ValueError:
                print("‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            
        elif choice == "4":
            admin.list_all_users()
            
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")

if __name__ == "__main__":
    main()