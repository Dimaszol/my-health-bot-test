# stripe_config.py - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Stripe –¥–ª—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –±–æ—Ç–∞

import os
import stripe
import logging
from typing import Dict, Any, Optional
from dotenv import load_dotenv

load_dotenv()
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Stripe
stripe.api_key = os.getenv("STRIPE_SECRET_KEY")

class StripeConfig:
    """–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è Stripe"""
    
    # –ö–ª—é—á–∏ –∏–∑ .env
    PUBLISHABLE_KEY = os.getenv("STRIPE_PUBLISHABLE_KEY")
    SECRET_KEY = os.getenv("STRIPE_SECRET_KEY") 
    WEBHOOK_SECRET = os.getenv("STRIPE_WEBHOOK_SECRET")
    
    # URL –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã
    SUCCESS_URL = "https://t.me/DrZolinBot"
    CANCEL_URL = "https://t.me/DrZolinBot"
    
    # –ü–∞–∫–µ—Ç—ã –ø–æ–¥–ø–∏—Å–æ–∫ (—Ü–µ–Ω—ã –≤ —Ü–µ–Ω—Ç–∞—Ö!)
    SUBSCRIPTION_PACKAGES = {
        "basic_sub": {
            "name": "Basic Subscription",
            "price_cents": 399,
            "price_display": "$3.99/month",
            "documents": 5,
            "gpt4o_queries": 100,
            "type": "subscription",
            "duration_days": 30,
            "stripe_price_id": "price_1RXp3eCS4n1EZxNVbn0G3WsQ",  # –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π
            # ‚úÖ –ù–û–í–´–ï –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è
            "user_friendly_name": "Basic Subscription",
            "features": {
                "ru": [
                    "5 –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏–ª–∏ —Å–Ω–∏–º–∫–æ–≤",
                    "100 –≥–ª—É–±–æ–∫–∏—Ö –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤",
                    "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ò–ò"
                ],
                "uk": [
                    "5 –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤ –∞–±–æ –∑–Ω—ñ–º–∫—ñ–≤", 
                    "100 –≥–ª–∏–±–æ–∫–∏—Ö –º–µ–¥–∏—á–Ω–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π",
                    "–ü—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–Ω–∞ –æ–±—Ä–æ–±–∫–∞ –®–Ü"
                ],
                "en": [
                    "5 uploaded documents or scans",
                    "100 deep medical responses", 
                    "Priority AI processing"
                ]
            }
        },
        "premium_sub": {
            "name": "Premium Subscription", 
            "price_cents": 999,
            "price_display": "$9.99/month",
            "documents": 20,
            "gpt4o_queries": 400,
            "type": "subscription",
            "duration_days": 30,
            "stripe_price_id": "price_1RXp4qCS4n1EZxNVjJX9xNgf",  # –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π
            "user_friendly_name": "Premium Subscription",
            "features": {
                "ru": [
                    "20 –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏–ª–∏ —Å–Ω–∏–º–∫–æ–≤",
                    "400 –≥–ª—É–±–æ–∫–∏—Ö –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤",
                    "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ò–ò",
                    "–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å–Ω–∏–º–∫–æ–≤"
                ],
                "uk": [
                    "20 –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤ –∞–±–æ –∑–Ω—ñ–º–∫—ñ–≤",
                    "400 –≥–ª–∏–±–æ–∫–∏—Ö –º–µ–¥–∏—á–Ω–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π", 
                    "–ü—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–Ω–∞ –æ–±—Ä–æ–±–∫–∞ –®–Ü",
                    "–†–æ–∑—à–∏—Ä–µ–Ω–∏–π –∞–Ω–∞–ª—ñ–∑ –∑–Ω—ñ–º–∫—ñ–≤"
                ],
                "en": [
                    "20 uploaded documents or scans",
                    "400 deep medical responses",
                    "Priority AI processing", 
                    "Advanced scan analysis"
                ]
            }
        },
        "extra_pack": {
            "name": "Extra Pack",
            "price_cents": 199,
            "price_display": "$1.99",
            "documents": 3,
            "gpt4o_queries": 30,
            "type": "one_time",
            "duration_days": 30,
            "user_friendly_name": "Extra Pack",
            "features": {
                "ru": [
                    "3 –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏–ª–∏ —Å–Ω–∏–º–∫–∞",
                    "30 –≥–ª—É–±–æ–∫–∏—Ö –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤",
                    "–î–µ–π—Å—Ç–≤—É–µ—Ç 30 –¥–Ω–µ–π"
                ],
                "uk": [
                    "3 –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–∏ –∞–±–æ –∑–Ω—ñ–º–∫–∏",
                    "30 –≥–ª–∏–±–æ–∫–∏—Ö –º–µ–¥–∏—á–Ω–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π",
                    "–î—ñ—î 30 –¥–Ω—ñ–≤"
                ],
                "en": [
                    "3 uploaded documents or scans", 
                    "30 deep medical responses",
                    "Valid for 30 days"
                ]
            }
        }
    }
    
    @classmethod
    def validate_config(cls) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–ª—é—á–µ–π"""
        required_keys = [cls.PUBLISHABLE_KEY, cls.SECRET_KEY]
        
        missing_keys = [key for key in required_keys if not key]
        
        if missing_keys:
            logger.error("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–ª—é—á–∏ Stripe –≤ .env —Ñ–∞–π–ª–µ")
            return False
            
        logger.info("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Stripe –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
        return True
    
    @classmethod
    def get_package_info(cls, package_id: str) -> Optional[Dict[str, Any]]:
        """–ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞–∫–µ—Ç–µ –ø–æ ID"""
        return cls.SUBSCRIPTION_PACKAGES.get(package_id)
    
    @classmethod
    def get_all_packages(cls) -> Dict[str, Dict[str, Any]]:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞–∫–µ—Ç—ã"""
        return cls.SUBSCRIPTION_PACKAGES.copy()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
def check_stripe_setup() -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫—É Stripe –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Stripe...")
    
    if not StripeConfig.validate_config():
        print("‚ùå Stripe –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ .env —Ñ–∞–π–ª")
        return False
    
    try:
        # –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∫ Stripe API
        stripe.Account.retrieve()
        print("‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Stripe API —É—Å–ø–µ—à–Ω–æ")
        return True
        
    except stripe.error.AuthenticationError:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π Stripe API –∫–ª—é—á")
        return False
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Stripe: {e}")
        return False

if __name__ == "__main__":
    # –¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    success = check_stripe_setup()
    if success:
        print("\nüì¶ –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞–∫–µ—Ç—ã:")
        for pkg_id, pkg_info in StripeConfig.get_all_packages().items():
            print(f"  ‚Ä¢ {pkg_info['name']}: {pkg_info['price_display']}")
    else:
        print("\nüí° –î–æ–±–∞–≤—å—Ç–µ –∫–ª—é—á–∏ Stripe –≤ .env —Ñ–∞–π–ª")