# === –§–ê–ô–õ: feedback_handler.py ===
# –°–∏—Å—Ç–µ–º–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /support (–ë–ï–ó –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫)

from aiogram import types, Bot
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardRemove
from db_postgresql import t  # ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏–∑ db_postgresql
import logging

logger = logging.getLogger(__name__)

# ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–í–ê–®–ï! –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à Telegram ID)
ADMIN_USER_ID = 7374723347


class FeedbackStates(StatesGroup):
    """–°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏"""
    waiting_for_message = State()      # –ñ–¥—ë–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    waiting_for_admin_reply = State()  # –ñ–¥—ë–º –æ—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∞


# ===================================
# –ß–ê–°–¢–¨ 1: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∏—à–µ—Ç –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É
# ===================================

async def start_feedback_from_command(message: types.Message, state: FSMContext, lang: str):
    """
    –®–ê–ì 1: –ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /support
    –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç /support –≤ —Ç–µ–∫—Å—Ç–µ
    """
    
    # –°–æ–∑–¥–∞—ë–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–û—Ç–º–µ–Ω–∞"
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(
                text=t("cancel_feedback", lang),  # "‚ùå –û—Ç–º–µ–Ω–∞"
                callback_data="cancel_feedback"
            )
        ]
    ])
    
    await message.answer(
        t("feedback_prompt", lang),  # "üìù –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
        reply_markup=keyboard,
        parse_mode="HTML"
    )
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
    await state.set_state(FeedbackStates.waiting_for_message)
    
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –Ω–∞—á–∞–ª –æ–±—Ä–∞—â–µ–Ω–∏–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É")


async def cancel_feedback(callback: types.CallbackQuery, state: FSMContext, lang: str):
    """
    –®–ê–ì 1.1: –û—Ç–º–µ–Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è (–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ–¥—É–º–∞–ª)
    """
    await state.clear()  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    
    await callback.message.edit_text(
        t("feedback_cancelled", lang),  # "‚ùå –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞"
        parse_mode="HTML"
    )
    await callback.answer()
    
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} –æ—Ç–º–µ–Ω–∏–ª –æ–±—Ä–∞—â–µ–Ω–∏–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É")


async def receive_feedback_message(message: types.Message, state: FSMContext, bot: Bot, lang: str):
    """
    –®–ê–ì 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–µ—Ä–µ—Å—ã–ª–∫–∞ –∞–¥–º–∏–Ω—É —Å –∫–Ω–æ–ø–∫–æ–π "–û—Ç–≤–µ—Ç–∏—Ç—å"
    
    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
    - message: —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    - state: —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM
    - bot: —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–¥–º–∏–Ω—É
    - lang: —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    user_id = message.from_user.id
    username = message.from_user.username or "–±–µ–∑ username"
    first_name = message.from_user.first_name or "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"
    
    # ===== –®–ê–ì 2.1: –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∞ =====
    admin_message = f"""üì® <b>–ù–û–í–û–ï –û–ë–†–ê–©–ï–ù–ò–ï –í –ü–û–î–î–ï–†–ñ–ö–£</b>

üë§ <b>–û—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</b>
‚Ä¢ ID: <code>{user_id}</code>
‚Ä¢ Username: @{username}
‚Ä¢ –ò–º—è: {first_name}

üí¨ <b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b>
{message.text}

---
‚è∞ {message.date.strftime('%d.%m.%Y %H:%M')}"""
    
    # ===== –®–ê–ì 2.2: –°–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫—É "–û—Ç–≤–µ—Ç–∏—Ç—å" –¥–ª—è –∞–¥–º–∏–Ω–∞ =====
    admin_keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(
                text="üí¨ –û—Ç–≤–µ—Ç–∏—Ç—å",
                callback_data=f"reply_to_user:{user_id}"
            )
        ]
    ])
    
    try:
        # ===== –®–ê–ì 2.3: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—É —Å –∫–Ω–æ–ø–∫–æ–π =====
        await bot.send_message(
            chat_id=ADMIN_USER_ID,
            text=admin_message,
            reply_markup=admin_keyboard,
            parse_mode="HTML"
        )
        
        logger.info(f"–û–±—Ä–∞—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω—É")
        
        # ===== –®–ê–ì 2.4: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é =====
        await message.answer(
            t("feedback_sent", lang),  # "‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ..."
            parse_mode="HTML"
        )
        
        # ===== –®–ê–ì 2.5: –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –æ–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º =====
        await state.clear()
        
    except Exception as e:
        # ===== –û–ë–†–ê–ë–û–¢–ö–ê –û–®–ò–ë–û–ö =====
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É: {e}")
        await message.answer(
            t("feedback_error", lang),  # "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ"
            parse_mode="HTML"
        )
        await state.clear()


# ===================================
# –ß–ê–°–¢–¨ 2: –ê–¥–º–∏–Ω –æ—Ç–≤–µ—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
# ===================================

async def start_admin_reply(callback: types.CallbackQuery, state: FSMContext):
    """
    –®–ê–ì 3: –ê–¥–º–∏–Ω –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É "–û—Ç–≤–µ—Ç–∏—Ç—å" –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    –¢–µ–ø–µ—Ä—å –∂–¥—ë–º —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç –∞–¥–º–∏–Ω–∞
    """
    
    # ===== –®–ê–ì 3.1: –ò–∑–≤–ª–µ–∫–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ callback_data =====
    try:
        user_id = int(callback.data.split(":")[1])
    except (IndexError, ValueError):
        await callback.answer("‚ùå –û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö", show_alert=True)
        return
    
    # ===== –®–ê–ì 3.2: –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ =====
    await state.update_data(target_user_id=user_id)
    await state.set_state(FeedbackStates.waiting_for_admin_reply)
    
    # ===== –®–ê–ì 3.3: –°–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫—É "–û—Ç–º–µ–Ω–∞" –¥–ª—è –∞–¥–º–∏–Ω–∞ =====
    cancel_keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(
                text="‚ùå –û—Ç–º–µ–Ω–∞",
                callback_data="cancel_admin_reply"
            )
        ]
    ])
    
    # ===== –®–ê–ì 3.4: –ü—Ä–æ—Å–∏–º –∞–¥–º–∏–Ω–∞ –Ω–∞–ø–∏—Å–∞—Ç—å –æ—Ç–≤–µ—Ç =====
    await callback.message.answer(
        f"üìù <b>–ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}</b>\n\n"
        f"–í–∞—à –æ—Ç–≤–µ—Ç –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –µ–º—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.",
        reply_markup=cancel_keyboard,
        parse_mode="HTML"
    )
    
    await callback.answer()
    logger.info(f"–ê–¥–º–∏–Ω –Ω–∞—á–∞–ª –æ—Ç–≤–µ—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")


async def cancel_admin_reply(callback: types.CallbackQuery, state: FSMContext):
    """
    –®–ê–ì 3.1: –û—Ç–º–µ–Ω–∞ –æ—Ç–≤–µ—Ç–∞ (–µ—Å–ª–∏ –∞–¥–º–∏–Ω –ø–µ—Ä–µ–¥—É–º–∞–ª –æ—Ç–≤–µ—á–∞—Ç—å)
    """
    await state.clear()
    
    await callback.message.edit_text(
        "‚ùå –û—Ç–≤–µ—Ç –æ—Ç–º–µ–Ω—ë–Ω",
        parse_mode="HTML"
    )
    await callback.answer()
    
    logger.info("–ê–¥–º–∏–Ω –æ—Ç–º–µ–Ω–∏–ª –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")


async def send_admin_reply_to_user(message: types.Message, state: FSMContext, bot: Bot):
    """
    –®–ê–ì 4: –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç –∞–¥–º–∏–Ω–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    """
    
    # ===== –®–ê–ì 4.1: –ò–∑–≤–ª–µ–∫–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è =====
    data = await state.get_data()
    target_user_id = data.get("target_user_id")
    
    if not target_user_id:
        await message.answer("‚ùå –û—à–∏–±–∫–∞: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω")
        await state.clear()
        return
    
    # ===== –®–ê–ì 4.2: –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è =====
    response_message = f"""ü§ñ <b>–û–¢–í–ï–¢ –û–¢ –°–õ–£–ñ–ë–´ –ü–û–î–î–ï–†–ñ–ö–ò PULSEBOOK</b>

{message.text}

---
üí° –ï—Å–ª–∏ —É –≤–∞—Å –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã, –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /support —Å–Ω–æ–≤–∞."""
    
    try:
        # ===== –®–ê–ì 4.3: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é =====
        await bot.send_message(
            chat_id=target_user_id,
            text=response_message,
            parse_mode="HTML"
        )
        
        logger.info(f"–û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {target_user_id}")
        
        # ===== –®–ê–ì 4.4: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∞–¥–º–∏–Ω—É =====
        await message.answer(
            f"‚úÖ <b>–û—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {target_user_id}</b>",
            parse_mode="HTML"
        )
        
        # ===== –®–ê–ì 4.5: –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ =====
        await state.clear()
        
    except Exception as e:
        # ===== –û–ë–†–ê–ë–û–¢–ö–ê –û–®–ò–ë–û–ö =====
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {target_user_id}: {e}")
        await message.answer(
            f"‚ùå <b>–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞:</b>\n<code>{str(e)}</code>\n\n"
            f"–í–æ–∑–º–æ–∂–Ω–æ, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞.",
            parse_mode="HTML"
        )
        await state.clear()