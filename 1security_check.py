# startup_check.py - –ü—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞

import os
import sys
from pathlib import Path

def check_environment():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫—Ä–∏—Ç–∏—á–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º"""
    
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
    if not os.path.exists('.env'):
        print("‚ùå –û–®–ò–ë–ö–ê: —Ñ–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env —Å:")
        print("BOT_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω")
        print("OPENAI_API_KEY=–≤–∞—à_–∫–ª—é—á")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–π
    from dotenv import load_dotenv
    load_dotenv()
    
    bot_token = os.getenv("BOT_TOKEN")
    openai_key = os.getenv("OPENAI_API_KEY")
    
    if not bot_token:
        print("‚ùå –û–®–ò–ë–ö–ê: BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω –≤ .env")
        return False
    
    if not openai_key:
        print("‚ùå –û–®–ò–ë–ö–ê: OPENAI_API_KEY –Ω–µ –∑–∞–¥–∞–Ω –≤ .env")
        return False
        
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    Path("files").mkdir(exist_ok=True)
    Path("vector_store").mkdir(exist_ok=True)
    
    print("‚úÖ –í—Å–µ –∫—Ä–∏—Ç–∏—á–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ –ø–æ—Ä—è–¥–∫–µ")
    return True

def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"""
    
    critical_packages = [
        'aiogram', 'openai', 'chromadb', 'aiosqlite', 
        'dotenv', 'pdf2image', 'tiktoken'
    ]
    
    missing = []
    for package in critical_packages:
        try:
            __import__(package.replace('-', '_'))
        except ImportError:
            missing.append(package)
    
    if missing:
        print(f"‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ø–∞–∫–µ—Ç—ã: {', '.join(missing)}")
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install -r requirements.txt")
        return False
    
    print("‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    return True

if __name__ == "__main__":
    if not check_dependencies():
        sys.exit(1)
    if not check_environment():
        sys.exit(1)
    print("üöÄ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã, –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –±–æ—Ç–∞!")